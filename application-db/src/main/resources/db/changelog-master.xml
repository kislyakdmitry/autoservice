<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd
    http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
    <changeSet id="1" author="dmitry" context="dev, prod, test">
        <createTable tableName="cars">
            <column name="id" type="serial">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="name" type="varchar(255)"/>
            <column name="price" type="currency"/>
            <column name="ordered" type="boolean" defaultValueBoolean="false"/>
            <column name="created" type="datetime" defaultValueComputed="CURRENT_TIMESTAMP"/>
            <column name="updated" type="datetime"/>
        </createTable>
        <createTable tableName="customers">
            <column name="id" type="int" autoIncrement="true">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="first_name" type="varchar(255)"/>
            <column name="last_name" type="varchar(255)"/>
            <column name="created" type="datetime" defaultValueComputed="CURRENT_TIMESTAMP"/>
            <column name="updated" type="datetime"/>
        </createTable>
        <createTable tableName="employees">
            <column name="id" type="int" autoIncrement="true">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="first_name" type="varchar(255)"/>
            <column name="last_name" type="varchar(255)"/>
            <column name="created" type="datetime" defaultValueComputed="CURRENT_TIMESTAMP"/>
            <column name="updated" type="datetime"/>
        </createTable>
        <createTable tableName="contracts">
            <column name="id" type="int" autoIncrement="true">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="start_time" type="datetime"/>
            <column name="end_time" type="datetime"/>
            <column name="customer_id" type="int"/>
            <column name="employee_id" type="int"/>
            <column name="created" type="datetime" defaultValueComputed="CURRENT_TIMESTAMP"/>
            <column name="updated" type="datetime"/>
        </createTable>
        <createTable tableName="additional_agreements">
            <column name="id" type="int" autoIncrement="true">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="contract_id" type="int"/>
            <column name="car_id" type="int"/>
            <column name="created" type="datetime" defaultValueComputed="CURRENT_TIMESTAMP"/>
            <column name="updated" type="datetime"/>
        </createTable>
        <createTable tableName="contracts_cars">
            <column name="id" type="int" autoIncrement="true">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="car_id" type="int"/>
            <column name="contract_id" type="int"/>
            <column name="created" type="datetime" defaultValueComputed="CURRENT_TIMESTAMP"/>
            <column name="updated" type="datetime"/>
        </createTable>
        <addForeignKeyConstraint baseColumnNames="customer_id"
                                 baseTableName="contracts"
                                 constraintName="fk_contract_customer"
                                 referencedColumnNames="id"
                                 referencedTableName="customers"/>
        <addForeignKeyConstraint baseColumnNames="employee_id"
                                 baseTableName="contracts"
                                 constraintName="fk_contract_employee"
                                 referencedColumnNames="id"
                                 referencedTableName="employees"/>
        <addForeignKeyConstraint baseColumnNames="contract_id"
                                 baseTableName="additional_agreements"
                                 constraintName="fk_additionalAgreement_contract"
                                 referencedColumnNames="id"
                                 referencedTableName="contracts"/>
        <addForeignKeyConstraint baseColumnNames="car_id"
                                 baseTableName="additional_agreements"
                                 constraintName="fk_additionalAgreement_car"
                                 referencedColumnNames="id"
                                 referencedTableName="cars"/>
        <addForeignKeyConstraint baseColumnNames="car_id"
                                 baseTableName="contracts_cars"
                                 constraintName="fk_contractsCars_car"
                                 referencedColumnNames="id"
                                 referencedTableName="cars"/>
        <addForeignKeyConstraint baseColumnNames="contract_id"
                                 baseTableName="contracts_cars"
                                 constraintName="fk_contractsCars_contract"
                                 referencedColumnNames="id"
                                 referencedTableName="contracts"/>
    </changeSet>
    <changeSet id="2" author="dmitry" context="dev, prod, test">
        <addColumn tableName="customers" schemaName="public">
            <column name="username" type="varchar(255)"/>
            <column name="password" type="varchar(255)"/>
        </addColumn>
    </changeSet>
    <changeSet id="3" author="dmitry" context="dev, prod, test">
        <addColumn tableName="customers" schemaName="public">
            <column name="role" type="varchar(20)"/>
        </addColumn>
        <addColumn tableName="employees" schemaName="public">
            <column name="username" type="varchar(255)"/>
            <column name="password" type="varchar(255)"/>
            <column name="role" type="varchar(20)"/>
        </addColumn>
    </changeSet>
    <changeSet author="dmitry" id="4" context="dev">
        <sqlFile dbms="postgresql"
                 encoding="utf8"
                 endDelimiter="\nGO"
                 path="init.sql"
                 relativeToChangelogFile="true"
                 splitStatements="true"
                 stripComments="true"/>
    </changeSet>
    <changeSet context="dev, test, prod" id="5" author="dmitry">
        <createProcedure>
            CREATE OR REPLACE FUNCTION change_update_time() RETURNS trigger
            LANGUAGE plpgsql
            AS $$
            BEGIN
            NEW.updated := CURRENT_TIMESTAMP;
            RETURN NEW;
            END;
            $$;
        </createProcedure>
        <rollback>
            DROP FUNCTION change_update_time();
        </rollback>
        <sql>
            DROP TRIGGER IF EXISTS change_update_time ON cars;
            CREATE TRIGGER change_update_time BEFORE UPDATE ON cars FOR EACH ROW EXECUTE PROCEDURE change_update_time();
            DROP TRIGGER IF EXISTS change_update_time ON contracts;
            CREATE TRIGGER change_update_time BEFORE UPDATE ON contracts FOR EACH ROW EXECUTE PROCEDURE change_update_time();
            DROP TRIGGER IF EXISTS change_update_time ON employees;
            CREATE TRIGGER change_update_time BEFORE UPDATE ON employees FOR EACH ROW EXECUTE PROCEDURE change_update_time();
            DROP TRIGGER IF EXISTS change_update_time ON customers;
            CREATE TRIGGER change_update_time BEFORE UPDATE ON customers FOR EACH ROW EXECUTE PROCEDURE change_update_time();
            DROP TRIGGER IF EXISTS change_update_time ON contracts_cars;
            CREATE TRIGGER change_update_time BEFORE UPDATE ON contracts_cars FOR EACH ROW EXECUTE PROCEDURE change_update_time();
            DROP TRIGGER IF EXISTS change_update_time ON additional_agreements;
            CREATE TRIGGER change_update_time BEFORE UPDATE ON additional_agreements FOR EACH ROW EXECUTE PROCEDURE change_update_time();
        </sql>
        <rollback>
            DROP TRIGGER change_update_time ON cars;
        </rollback>
    </changeSet>
</databaseChangeLog>